Compartments: [{
    compartment ID,
    (implicit status: empty, open, cleared
    rxuid,
    quantity,
    expiration date,
    lot number
}],
    
    access history: [DispenserAccess: {
        accessor: id (either caretaker id or patient id),
        on behalf of: id (caretaker or patient, can be same as accessor),
        time,
        drugs dispensed: [DispenserAccessEntry: {
            id,
            Drug id,
            quantity,
            expiration date, //duplication because drugcompartment entries are free to change over time
            lot number
        }]
    }],
    location
}

Patient: {
    id,
    name,
    dispenser id,
    caretaker id(s?),
    MAC address (body pack)
    able to fetch medication?,
    medications: [MedicationRegimenEntry: {
        medication: Drug id,
        quantity (of pills),
        scheduled time (alert time),
        repetition time (time until next scheduled time), //idea is that scheduled time is updated to be scheduled time + repetition time if scheduled_time < current time)
        allow range (when medication allowed to be taken)
    }],
    history: [MedicationRegimenEntry: {
        medication: Drug id,
        quantity,
        scheduled time,
        reptition time,
        allowed range,
        notifications: [Notification: {
            id to whom notification was issued,
            time
        }],
        result: missed | dispensed (include DispenserAccess id)
    }]
    notes: {}
}

Caretaker: {
    Name
}

User: {
   id,
   username,
   password (SHA-2 hashed),
   user type (enum) (patient, caretaker, admin, dispenser)
}
